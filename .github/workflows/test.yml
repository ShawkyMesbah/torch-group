name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      NEXTAUTH_SECRET: test_secret
      NEXTAUTH_URL: http://localhost:3000
      NODE_ENV: test

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Install dependencies
      run: npm ci

    - name: Setup Playwright
      run: npx playwright install --with-deps

    - name: Generate Prisma Client
      run: npx prisma generate

    - name: Run database migrations
      run: npx prisma migrate deploy

    - name: Run Jest tests
      run: npm run test:ci

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Run Performance tests
      run: npm run test:performance

    - name: Run Accessibility tests
      run: npm run test:accessibility

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: playwright-report/

    - name: Check performance budgets
      run: |
        if grep -q "FAIL" playwright-report/performance.spec.ts-snapshots/*.txt; then
          echo "Performance tests failed!"
          exit 1
        fi

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          junit.xml
          test-results/
          coverage/ 