// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User model
model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(STAFF)
  image     String?
  posts     BlogPost[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum Role {
  ADMIN
  STAFF
}

// Page model
model Page {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String   @db.Text
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Blog post model
model BlogPost {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  excerpt     String
  content     String    @db.Text
  coverImage  String?
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([createdAt])
  @@index([isPublished])
  @@index([authorId])
}

// Project model
model Project {
  id             String    @id @default(cuid())
  title          String
  slug           String    @unique
  description    String
  content        String    @db.Text
  coverImage     String?
  clientName     String?
  completionDate DateTime?
  isPublished    Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

// Team member model
model TeamMember {
  id          String   @id @default(cuid())
  name        String
  role        String
  bio         String   @db.Text
  image       String?
  socialLinks Json?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Contact message model
model ContactMessage {
  id         String   @id @default(cuid())
  name       String
  email      String
  phone      String?
  subject    String
  message    String   @db.Text
  attachment String?  // URL to uploaded file
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([createdAt])
  @@index([isRead])
}

// Talent model
model Talent {
  id        String         @id @default(cuid())
  name      String
  role      String
  category  TalentCategory
  bio       String         @db.Text
  imageUrl  String?
  status    TalentStatus   @default(PENDING)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@index([createdAt])
  @@index([status])
  @@index([category])
}

enum TalentCategory {
  DESIGN
  MUSIC
  PERFORMANCE
  TECHNOLOGY
  MARKETING
  OTHER
}

enum TalentStatus {
  ACTIVE
  PENDING
  HIDDEN
}

// Analytics event model
model AnalyticsEvent {
  id        String           @id @default(cuid())
  type      AnalyticsEventType
  meta      Json?
  createdAt DateTime         @default(now())

  @@index([createdAt])
  @@index([type])
}

enum AnalyticsEventType {
  PAGE_VIEW
  FORM_SUBMIT
  PHONE_VERIFIED
  TALENT_CLICK
}

model Analytics {
  id        String   @id @default(cuid())
  event     String
  data      Json?
  timestamp DateTime @default(now())
  userId    String?
  path      String?
  duration  Int?

  @@map("analytics")

  @@index([timestamp])
  @@index([userId])
  @@index([path])
  @@index([event])
}
